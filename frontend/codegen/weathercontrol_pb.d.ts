// @generated by protoc-gen-es v1.10.0
// @generated from file weathercontrol.proto (package weathercontrol.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message weathercontrol.v1.GetWeatherRequest
 */
export declare class GetWeatherRequest extends Message<GetWeatherRequest> {
  constructor(data?: PartialMessage<GetWeatherRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "weathercontrol.v1.GetWeatherRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetWeatherRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetWeatherRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetWeatherRequest;

  static equals(a: GetWeatherRequest | PlainMessage<GetWeatherRequest> | undefined, b: GetWeatherRequest | PlainMessage<GetWeatherRequest> | undefined): boolean;
}

/**
 * @generated from message weathercontrol.v1.GetWeatherResponse
 */
export declare class GetWeatherResponse extends Message<GetWeatherResponse> {
  /**
   * @generated from field: string weather_type = 1;
   */
  weatherType: string;

  /**
   * @generated from field: int32 intensity = 2;
   */
  intensity: number;

  constructor(data?: PartialMessage<GetWeatherResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "weathercontrol.v1.GetWeatherResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetWeatherResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetWeatherResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetWeatherResponse;

  static equals(a: GetWeatherResponse | PlainMessage<GetWeatherResponse> | undefined, b: GetWeatherResponse | PlainMessage<GetWeatherResponse> | undefined): boolean;
}

/**
 * @generated from message weathercontrol.v1.SetWeatherRequest
 */
export declare class SetWeatherRequest extends Message<SetWeatherRequest> {
  /**
   * @generated from field: string weather_type = 1;
   */
  weatherType: string;

  /**
   * @generated from field: int32 intensity = 2;
   */
  intensity: number;

  constructor(data?: PartialMessage<SetWeatherRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "weathercontrol.v1.SetWeatherRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetWeatherRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetWeatherRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetWeatherRequest;

  static equals(a: SetWeatherRequest | PlainMessage<SetWeatherRequest> | undefined, b: SetWeatherRequest | PlainMessage<SetWeatherRequest> | undefined): boolean;
}

/**
 * @generated from message weathercontrol.v1.SetWeatherResponse
 */
export declare class SetWeatherResponse extends Message<SetWeatherResponse> {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  constructor(data?: PartialMessage<SetWeatherResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "weathercontrol.v1.SetWeatherResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetWeatherResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetWeatherResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetWeatherResponse;

  static equals(a: SetWeatherResponse | PlainMessage<SetWeatherResponse> | undefined, b: SetWeatherResponse | PlainMessage<SetWeatherResponse> | undefined): boolean;
}

